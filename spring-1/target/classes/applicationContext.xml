<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

<!--

    http://www.springframework.org/schema/beans/spring-beans.xsd" 约束文件

spring 配置 文件  beans 根标签
    spring java 对象 叫做 bean

-->

    <!--// 声明bean-->
    <!--创建 类的 bean 对象-->
    <!-- 反射 机制 创建 对象-->
    <!--bean-->
    <!--
    bean 在 ioc 的 map中
    默认 是单例的
    map key 就是 bean id

    scope="singleton" 创建 bean 类型
    // 单例
    // 多例
    // 默认 单例
    -->
    <bean id="somService" class="pres.qianmuna.spring.service.impl.SomServiceImpl"/>
    <!---->
    <bean id="somService1" class="pres.qianmuna.spring.service.impl.SomServiceImpl"  scope="prototype" />

    <!--
    设值 注入
    有参 构造 注入
    set 注入 值

    简单属性 的赋值

    // 要有 set 方法

   引用类型 的 注入
   // 引入 另一个 bean name

   有参方法 构造
   //
    -->
    <bean id="student" class="pres.qianmuna.spring.bea1.Student">

        <property name="name"  value="qianmuna" />

        <!-- 引用类型 ref-->
        <!--
        自动注入（引用类型）
        引用类型 自动赋值
        byName  引用类型与 bean 中name 一样 // 那就 可以 赋值
        byType  通过 type 类型 赋值

        通过 Autowire 这个 名称 // ...
        注解 还是 香啊
        -->
        <property name="date"  ref="date" />



    </bean>


    <bean id="date" class="java.util.Date" />

    <!--
    构造方法 注入
    -->
    <bean  id="student2" class="pres.qianmuna.spring.bea1.Student2" >
         <!-- 对应参数 name index 参数下标-->

        <!--

        两种方法 实现 注入
        //
        name
        index
        取一个就可以了
        -->
        <constructor-arg name="name" index="0" value="11" />
        <constructor-arg name="name2" index="1" value="22" />
    </bean>


    <!--
    加载

    多配置 文件

    包含 其他配置 文件

    * 通配符
    -->
    <!--小心 死循环 -->
    <!--著主配置 与 其他 配置 分开-->
    <import resource="classpath:spring/spring-*.xml"  />





</beans>